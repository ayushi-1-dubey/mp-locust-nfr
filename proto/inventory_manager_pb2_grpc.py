# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import inventory_manager_pb2 as inventory__manager__pb2


class InventoryManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLotDetails = channel.unary_unary(
                '/com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager/GetLotDetails',
                request_serializer=inventory__manager__pb2.GetLotDetailsRequest.SerializeToString,
                response_deserializer=inventory__manager__pb2.LotResponse.FromString,
                )
        self.GetLotQuantity = channel.unary_unary(
                '/com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager/GetLotQuantity',
                request_serializer=inventory__manager__pb2.GetLotQuantityRequest.SerializeToString,
                response_deserializer=inventory__manager__pb2.LotQuantityResponse.FromString,
                )
        self.GetAvailableLots = channel.unary_unary(
                '/com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager/GetAvailableLots',
                request_serializer=inventory__manager__pb2.GetAvailableLotsRequest.SerializeToString,
                response_deserializer=inventory__manager__pb2.AvailableLotsResponse.FromString,
                )
        self.GetAvailableLotsBulk = channel.unary_unary(
                '/com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager/GetAvailableLotsBulk',
                request_serializer=inventory__manager__pb2.GetAvailableLotsBulkRequest.SerializeToString,
                response_deserializer=inventory__manager__pb2.AvailableLotsBulkResponse.FromString,
                )


class InventoryManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetLotDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLotQuantity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAvailableLots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAvailableLotsBulk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLotDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLotDetails,
                    request_deserializer=inventory__manager__pb2.GetLotDetailsRequest.FromString,
                    response_serializer=inventory__manager__pb2.LotResponse.SerializeToString,
            ),
            'GetLotQuantity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLotQuantity,
                    request_deserializer=inventory__manager__pb2.GetLotQuantityRequest.FromString,
                    response_serializer=inventory__manager__pb2.LotQuantityResponse.SerializeToString,
            ),
            'GetAvailableLots': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableLots,
                    request_deserializer=inventory__manager__pb2.GetAvailableLotsRequest.FromString,
                    response_serializer=inventory__manager__pb2.AvailableLotsResponse.SerializeToString,
            ),
            'GetAvailableLotsBulk': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableLotsBulk,
                    request_deserializer=inventory__manager__pb2.GetAvailableLotsBulkRequest.FromString,
                    response_serializer=inventory__manager__pb2.AvailableLotsBulkResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetLotDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager/GetLotDetails',
            inventory__manager__pb2.GetLotDetailsRequest.SerializeToString,
            inventory__manager__pb2.LotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLotQuantity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager/GetLotQuantity',
            inventory__manager__pb2.GetLotQuantityRequest.SerializeToString,
            inventory__manager__pb2.LotQuantityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAvailableLots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager/GetAvailableLots',
            inventory__manager__pb2.GetAvailableLotsRequest.SerializeToString,
            inventory__manager__pb2.AvailableLotsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAvailableLotsBulk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.flipkarthealthplus.marketplace.inventorymanager.common.InventoryManager/GetAvailableLotsBulk',
            inventory__manager__pb2.GetAvailableLotsBulkRequest.SerializeToString,
            inventory__manager__pb2.AvailableLotsBulkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
